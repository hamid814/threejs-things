!function(){"use strict";var n,e={1624:function(n,e,t){var o=t(2212),r=t(5260),i=t(6426),c=t(5980),v=document.getElementById("webgl"),a=new o.WebGLRenderer({antialias:!0,canvas:v,preserveDrawingBuffer:!0});a.setSize(innerWidth,innerHeight),a.setClearColor(15658734),a.setPixelRatio(2),document.body.appendChild(a.domElement);var g=new o.PerspectiveCamera(45,1,.1,1e3);g.position.set(0,0,1.3),g.lookAt(0,0,0);var f=new o.Vector2,d=1,l=!1,u=0,s=0;a.domElement.addEventListener("wheel",(function(n){d+=n.deltaY/100})),a.domElement.addEventListener("mousedown",(function(n){l=!0,u=n.clientX,s=n.clientY})),a.domElement.addEventListener("mouseup",(function(n){l=!1})),a.domElement.addEventListener("mousemove",(function(n){if(l){var e=n.clientX,t=n.clientY,o=e-u,r=t-s;u=e,s=t,f.x+=o,f.y-=r}}));var x=new o.Scene,y={uniforms:{tDiffuse:{value:null},resolution:{value:new o.Vector2(innerWidth,innerHeight)},zoom:{value:d},offset:{value:f}},vertexShader:"\n    varying vec2 vUv;\n  \n    void main() {\n      vUv = uv;\n  \n      gl_Position = projectionMatrix * modelMatrix * viewMatrix * vec4(position, 1.0);\n    }\n  ",fragmentShader:"#define GLSLIFY 1\nvec4 permute(vec4 x){return mod(((x*34.0)+1.0)*x, 289.0);}\nvec4 taylorInvSqrt(vec4 r){return 1.79284291400159 - 0.85373472095314 * r;}\nvec3 fade(vec3 t) {return t*t*t*(t*(t*6.0-15.0)+10.0);}\n\nfloat noise(vec3 P){\n  vec3 Pi0 = floor(P); // Integer part for indexing\n  vec3 Pi1 = Pi0 + vec3(1.0); // Integer part + 1\n  Pi0 = mod(Pi0, 289.0);\n  Pi1 = mod(Pi1, 289.0);\n  vec3 Pf0 = fract(P); // Fractional part for interpolation\n  vec3 Pf1 = Pf0 - vec3(1.0); // Fractional part - 1.0\n  vec4 ix = vec4(Pi0.x, Pi1.x, Pi0.x, Pi1.x);\n  vec4 iy = vec4(Pi0.yy, Pi1.yy);\n  vec4 iz0 = Pi0.zzzz;\n  vec4 iz1 = Pi1.zzzz;\n\n  vec4 ixy = permute(permute(ix) + iy);\n  vec4 ixy0 = permute(ixy + iz0);\n  vec4 ixy1 = permute(ixy + iz1);\n\n  vec4 gx0 = ixy0 / 7.0;\n  vec4 gy0 = fract(floor(gx0) / 7.0) - 0.5;\n  gx0 = fract(gx0);\n  vec4 gz0 = vec4(0.5) - abs(gx0) - abs(gy0);\n  vec4 sz0 = step(gz0, vec4(0.0));\n  gx0 -= sz0 * (step(0.0, gx0) - 0.5);\n  gy0 -= sz0 * (step(0.0, gy0) - 0.5);\n\n  vec4 gx1 = ixy1 / 7.0;\n  vec4 gy1 = fract(floor(gx1) / 7.0) - 0.5;\n  gx1 = fract(gx1);\n  vec4 gz1 = vec4(0.5) - abs(gx1) - abs(gy1);\n  vec4 sz1 = step(gz1, vec4(0.0));\n  gx1 -= sz1 * (step(0.0, gx1) - 0.5);\n  gy1 -= sz1 * (step(0.0, gy1) - 0.5);\n\n  vec3 g000 = vec3(gx0.x,gy0.x,gz0.x);\n  vec3 g100 = vec3(gx0.y,gy0.y,gz0.y);\n  vec3 g010 = vec3(gx0.z,gy0.z,gz0.z);\n  vec3 g110 = vec3(gx0.w,gy0.w,gz0.w);\n  vec3 g001 = vec3(gx1.x,gy1.x,gz1.x);\n  vec3 g101 = vec3(gx1.y,gy1.y,gz1.y);\n  vec3 g011 = vec3(gx1.z,gy1.z,gz1.z);\n  vec3 g111 = vec3(gx1.w,gy1.w,gz1.w);\n\n  vec4 norm0 = taylorInvSqrt(vec4(dot(g000, g000), dot(g010, g010), dot(g100, g100), dot(g110, g110)));\n  g000 *= norm0.x;\n  g010 *= norm0.y;\n  g100 *= norm0.z;\n  g110 *= norm0.w;\n  vec4 norm1 = taylorInvSqrt(vec4(dot(g001, g001), dot(g011, g011), dot(g101, g101), dot(g111, g111)));\n  g001 *= norm1.x;\n  g011 *= norm1.y;\n  g101 *= norm1.z;\n  g111 *= norm1.w;\n\n  float n000 = dot(g000, Pf0);\n  float n100 = dot(g100, vec3(Pf1.x, Pf0.yz));\n  float n010 = dot(g010, vec3(Pf0.x, Pf1.y, Pf0.z));\n  float n110 = dot(g110, vec3(Pf1.xy, Pf0.z));\n  float n001 = dot(g001, vec3(Pf0.xy, Pf1.z));\n  float n101 = dot(g101, vec3(Pf1.x, Pf0.y, Pf1.z));\n  float n011 = dot(g011, vec3(Pf0.x, Pf1.yz));\n  float n111 = dot(g111, Pf1);\n\n  vec3 fade_xyz = fade(Pf0);\n  vec4 n_z = mix(vec4(n000, n100, n010, n110), vec4(n001, n101, n011, n111), fade_xyz.z);\n  vec2 n_yz = mix(n_z.xy, n_z.zw, fade_xyz.y);\n  float n_xyz = mix(n_yz.x, n_yz.y, fade_xyz.x); \n  return 2.2 * n_xyz;\n}\n\nuniform vec2 resolution;\nuniform vec2 offset;\nuniform float zoom;\n\nvoid main() {\n  vec2 uv = gl_FragCoord.xy / resolution - 0.5;\n  uv.x *= resolution.x / resolution.y;\n\n  uv -= offset / 200.0;\n\n  float s = 0.0;\n\n  float nv = noise(vec3(uv * zoom, 0.0));\n\n  s = step(mod(nv * 20.0, 1.0), 0.9);\n\n  gl_FragColor = vec4(vec3(s), 1.0);\n}"},m=new r.xC(a),z=new i.C(x,g);m.addPass(z);var p=new c.T(y);m.addPass(p),document.addEventListener("keydown",(function(n){"p"===n.key&&function(){try{var n="image/jpeg",e=a.domElement.toDataURL(n);w(e.replace(n,P),"menger-fractal.jpg")}catch(n){return void console.log(n)}}()}));var P="image/octet-stream",w=function(n,e){var t=document.createElement("a");"string"==typeof t.download?(document.body.appendChild(t),t.download=e,t.href=n,t.click(),document.body.removeChild(t)):location.replace(uri)};!function n(){p.uniforms.offset.value=f,p.uniforms.zoom.value=d,m.render(),requestAnimationFrame(n)}()}},t={};function o(n){var r=t[n];if(void 0!==r)return r.exports;var i=t[n]={exports:{}};return e[n](i,i.exports,o),i.exports}o.m=e,n=[],o.O=function(e,t,r,i){if(!t){var c=1/0;for(f=0;f<n.length;f++){t=n[f][0],r=n[f][1],i=n[f][2];for(var v=!0,a=0;a<t.length;a++)(!1&i||c>=i)&&Object.keys(o.O).every((function(n){return o.O[n](t[a])}))?t.splice(a--,1):(v=!1,i<c&&(c=i));if(v){n.splice(f--,1);var g=r();void 0!==g&&(e=g)}}return e}i=i||0;for(var f=n.length;f>0&&n[f-1][2]>i;f--)n[f]=n[f-1];n[f]=[t,r,i]},o.d=function(n,e){for(var t in e)o.o(e,t)&&!o.o(n,t)&&Object.defineProperty(n,t,{enumerable:!0,get:e[t]})},o.o=function(n,e){return Object.prototype.hasOwnProperty.call(n,e)},function(){var n={8421:0};o.O.j=function(e){return 0===n[e]};var e=function(e,t){var r,i,c=t[0],v=t[1],a=t[2],g=0;if(c.some((function(e){return 0!==n[e]}))){for(r in v)o.o(v,r)&&(o.m[r]=v[r]);if(a)var f=a(o)}for(e&&e(t);g<c.length;g++)i=c[g],o.o(n,i)&&n[i]&&n[i][0](),n[i]=0;return o.O(f)},t=self.webpackChunkthreejs_things=self.webpackChunkthreejs_things||[];t.forEach(e.bind(null,0)),t.push=e.bind(null,t.push.bind(t))}();var r=o.O(void 0,[9407],(function(){return o(1624)}));r=o.O(r)}();