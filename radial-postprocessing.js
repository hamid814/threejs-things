!function(){"use strict";var n,e={8375:function(n,e,t){var r=t(2212),o=t(5260),i=t(6426),a=t(5980),v=document.getElementById("webgl"),c=new r.WebGLRenderer({antialias:!0,canvas:v,preserveDrawingBuffer:!0});c.setSize(innerWidth,innerHeight),document.body.appendChild(c.domElement);var g=new r.Scene,d=new r.PerspectiveCamera(45,innerWidth/innerHeight,.1,1e3);d.position.set(0,0,2),d.lookAt(0,0,0);var f=new r.PlaneGeometry(3.5,3.5),l=new r.ShaderMaterial({uniforms:{uTime:{value:0}},vertexShader:"#define GLSLIFY 1\nvarying vec2 vUv;\n\nvoid main() {\n  gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.0);\n  \n  vUv = uv;\n}",fragmentShader:"#define GLSLIFY 1\nvec4 permute(vec4 x){return mod(((x*34.0)+1.0)*x, 289.0);}\nvec4 taylorInvSqrt(vec4 r){return 1.79284291400159 - 0.85373472095314 * r;}\nvec3 fade(vec3 t) {return t*t*t*(t*(t*6.0-15.0)+10.0);}\n\nfloat noise(vec3 P){\n  vec3 Pi0 = floor(P); // Integer part for indexing\n  vec3 Pi1 = Pi0 + vec3(1.0); // Integer part + 1\n  Pi0 = mod(Pi0, 289.0);\n  Pi1 = mod(Pi1, 289.0);\n  vec3 Pf0 = fract(P); // Fractional part for interpolation\n  vec3 Pf1 = Pf0 - vec3(1.0); // Fractional part - 1.0\n  vec4 ix = vec4(Pi0.x, Pi1.x, Pi0.x, Pi1.x);\n  vec4 iy = vec4(Pi0.yy, Pi1.yy);\n  vec4 iz0 = Pi0.zzzz;\n  vec4 iz1 = Pi1.zzzz;\n\n  vec4 ixy = permute(permute(ix) + iy);\n  vec4 ixy0 = permute(ixy + iz0);\n  vec4 ixy1 = permute(ixy + iz1);\n\n  vec4 gx0 = ixy0 / 7.0;\n  vec4 gy0 = fract(floor(gx0) / 7.0) - 0.5;\n  gx0 = fract(gx0);\n  vec4 gz0 = vec4(0.5) - abs(gx0) - abs(gy0);\n  vec4 sz0 = step(gz0, vec4(0.0));\n  gx0 -= sz0 * (step(0.0, gx0) - 0.5);\n  gy0 -= sz0 * (step(0.0, gy0) - 0.5);\n\n  vec4 gx1 = ixy1 / 7.0;\n  vec4 gy1 = fract(floor(gx1) / 7.0) - 0.5;\n  gx1 = fract(gx1);\n  vec4 gz1 = vec4(0.5) - abs(gx1) - abs(gy1);\n  vec4 sz1 = step(gz1, vec4(0.0));\n  gx1 -= sz1 * (step(0.0, gx1) - 0.5);\n  gy1 -= sz1 * (step(0.0, gy1) - 0.5);\n\n  vec3 g000 = vec3(gx0.x,gy0.x,gz0.x);\n  vec3 g100 = vec3(gx0.y,gy0.y,gz0.y);\n  vec3 g010 = vec3(gx0.z,gy0.z,gz0.z);\n  vec3 g110 = vec3(gx0.w,gy0.w,gz0.w);\n  vec3 g001 = vec3(gx1.x,gy1.x,gz1.x);\n  vec3 g101 = vec3(gx1.y,gy1.y,gz1.y);\n  vec3 g011 = vec3(gx1.z,gy1.z,gz1.z);\n  vec3 g111 = vec3(gx1.w,gy1.w,gz1.w);\n\n  vec4 norm0 = taylorInvSqrt(vec4(dot(g000, g000), dot(g010, g010), dot(g100, g100), dot(g110, g110)));\n  g000 *= norm0.x;\n  g010 *= norm0.y;\n  g100 *= norm0.z;\n  g110 *= norm0.w;\n  vec4 norm1 = taylorInvSqrt(vec4(dot(g001, g001), dot(g011, g011), dot(g101, g101), dot(g111, g111)));\n  g001 *= norm1.x;\n  g011 *= norm1.y;\n  g101 *= norm1.z;\n  g111 *= norm1.w;\n\n  float n000 = dot(g000, Pf0);\n  float n100 = dot(g100, vec3(Pf1.x, Pf0.yz));\n  float n010 = dot(g010, vec3(Pf0.x, Pf1.y, Pf0.z));\n  float n110 = dot(g110, vec3(Pf1.xy, Pf0.z));\n  float n001 = dot(g001, vec3(Pf0.xy, Pf1.z));\n  float n101 = dot(g101, vec3(Pf1.x, Pf0.y, Pf1.z));\n  float n011 = dot(g011, vec3(Pf0.x, Pf1.yz));\n  float n111 = dot(g111, Pf1);\n\n  vec3 fade_xyz = fade(Pf0);\n  vec4 n_z = mix(vec4(n000, n100, n010, n110), vec4(n001, n101, n011, n111), fade_xyz.z);\n  vec2 n_yz = mix(n_z.xy, n_z.zw, fade_xyz.y);\n  float n_xyz = mix(n_yz.x, n_yz.y, fade_xyz.x); \n  return 2.2 * n_xyz;\n}\n\nuniform float uTime;\n\nvarying vec2 vUv;\n\nvoid main() {\n  float noiseValue = noise(vec3(vUv.x * 20.0, vUv.y * 20.0, uTime));\n  \n  noiseValue = sin(noiseValue * 10.0);\n  \n  noiseValue = step(noiseValue, -0.1);\n\n  vec3 color = noiseValue == 0.0 ? vec3(1.0, 0.7, 0.2) : vec3(0.3, 0.2, 0.1);\n\n  gl_FragColor = vec4(color, 1.0);\n}",side:2}),u=new r.Mesh(f,l);g.add(u);var x={uniforms:{tDiffuse:{value:null},ratio:{value:innerWidth/innerHeight},width:{value:innerWidth}},vertexShader:"#define GLSLIFY 1\nvarying vec2 vUv;\n  \nvoid main() {\n  gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.0); \n\n  vUv = uv;\n}",fragmentShader:"#define GLSLIFY 1\n#define PI 3.1415926538\n\nuniform sampler2D tDiffuse;\nuniform float ratio;\nuniform float width;\n\nvarying vec2 vUv;\n\nvec2 rotateUV(vec2 uv, float rotation, vec2 mid) {\n      return vec2(\n        cos(rotation) * (uv.x - mid.x) + sin(rotation) * (uv.y - mid.y) + mid.x,\n        cos(rotation) * (uv.y - mid.y) - sin(rotation) * (uv.x - mid.x) + mid.y\n      );\n  }\n\nvoid main() {\n  float lvl = 6.0;\n  \n  vec2 ratioUv = vUv;\n  ratioUv.x *= ratio;\n  float shiftRatio = ratio / 2.0 - 0.5;\n  ratioUv.x -= shiftRatio;\n  \n  float dist = distance(ratioUv, vec2(0.5));\n\n  float angle = atan(ratioUv.x - 0.5, ratioUv.y - 0.5);\n  angle /= PI * 2.0;\n  angle += 0.5;\n  angle *= lvl * 2.0;\n  if(mod(angle, 2.0) < 1.0) {\n    angle = mod(angle, 1.0);\n  } else {\n    angle = 1.0 - mod(angle, 1.0);\n  }\n  \n  vec2 arbUV = vec2(0.0, dist) + 0.5;\n  \n  float rotationValue = angle * PI * 2.0 / (lvl * 2.0);\n  \n  vec2 rotatedArbUV = rotateUV(arbUV, rotationValue, vec2(0.5));\n\n  vec2 repeatedUv = rotatedArbUV;\n  repeatedUv.x = mod(rotatedArbUV.x, 1.0);\n  if (rotatedArbUV.x > 1.0) repeatedUv.x = 1.0 - repeatedUv.x;\n  repeatedUv.y = mod(rotatedArbUV.y, 1.0);\n  if (rotatedArbUV.y > 1.0) repeatedUv.y = 1.0 - repeatedUv.y;\n  \n  vec4 texel = texture2D( tDiffuse, repeatedUv );\n  \n  gl_FragColor = texel;\n}"},s=new o.xC(c),y=new i.C(g,d);s.addPass(y);var m=new a.T(x);s.addPass(m);var p=15;!function n(){s.render(),u.material.uniforms.uTime.value=p,p+=.006,requestAnimationFrame(n)}(),window.addEventListener("resize",(function(){var n=innerWidth,e=innerHeight;c.setSize(n,e),d.aspect=n/e,d.updateProjectionMatrix()})),document.body.addEventListener("mousemove",(function(){p-=.01})),document.addEventListener("keydown",(function(n){"p"===n.key&&function(){try{var n="image/jpeg",e=c.domElement.toDataURL(n);P(e.replace(n,z),"radial-postprocessing.jpg")}catch(n){return void console.log(n)}}()}));var z="image/octet-stream",P=function(n,e){var t=document.createElement("a");"string"==typeof t.download?(document.body.appendChild(t),t.download=e,t.href=n,t.click(),document.body.removeChild(t)):location.replace(uri)}}},t={};function r(n){var o=t[n];if(void 0!==o)return o.exports;var i=t[n]={exports:{}};return e[n](i,i.exports,r),i.exports}r.m=e,n=[],r.O=function(e,t,o,i){if(!t){var a=1/0;for(d=0;d<n.length;d++){t=n[d][0],o=n[d][1],i=n[d][2];for(var v=!0,c=0;c<t.length;c++)(!1&i||a>=i)&&Object.keys(r.O).every((function(n){return r.O[n](t[c])}))?t.splice(c--,1):(v=!1,i<a&&(a=i));if(v){n.splice(d--,1);var g=o();void 0!==g&&(e=g)}}return e}i=i||0;for(var d=n.length;d>0&&n[d-1][2]>i;d--)n[d]=n[d-1];n[d]=[t,o,i]},r.d=function(n,e){for(var t in e)r.o(e,t)&&!r.o(n,t)&&Object.defineProperty(n,t,{enumerable:!0,get:e[t]})},r.o=function(n,e){return Object.prototype.hasOwnProperty.call(n,e)},function(){var n={1347:0};r.O.j=function(e){return 0===n[e]};var e=function(e,t){var o,i,a=t[0],v=t[1],c=t[2],g=0;if(a.some((function(e){return 0!==n[e]}))){for(o in v)r.o(v,o)&&(r.m[o]=v[o]);if(c)var d=c(r)}for(e&&e(t);g<a.length;g++)i=a[g],r.o(n,i)&&n[i]&&n[i][0](),n[i]=0;return r.O(d)},t=self.webpackChunkthreejs_things=self.webpackChunkthreejs_things||[];t.forEach(e.bind(null,0)),t.push=e.bind(null,t.push.bind(t))}();var o=r.O(void 0,[1988],(function(){return r(8375)}));o=r.O(o)}();