!function(){"use strict";var n,e={4784:function(n,e,t){var r=t(2212),o=t(5260),i=t(5980),v=t(6426),a=document.getElementById("webgl"),c=new r.WebGLRenderer({antialias:!0,canvas:a,preserveDrawingBuffer:!0});c.setSize(innerWidth,innerHeight),c.setClearColor(15658734),c.setPixelRatio(Math.min(2,devicePixelRatio));var g=new r.Scene,f=new r.PerspectiveCamera(45,innerWidth/innerHeight,.1,1e3);f.position.set(0,60,130),f.up.set(0,100,0);var x={uniforms:{ratio:{value:innerWidth/innerHeight},uTime:{value:0}},vertexShader:"#define GLSLIFY 1\nvarying vec2 vUv;\n\nvoid main() {\n  vUv = uv;\n\n  gl_Position = projectionMatrix * viewMatrix * modelMatrix * vec4(position, 1.0);\n}",fragmentShader:"#define GLSLIFY 1\nvec4 permute(vec4 x){return mod(((x*34.0)+1.0)*x, 289.0);}\nvec4 taylorInvSqrt(vec4 r){return 1.79284291400159 - 0.85373472095314 * r;}\nvec3 fade(vec3 t) {return t*t*t*(t*(t*6.0-15.0)+10.0);}\n\nfloat noise(vec3 P){\n  vec3 Pi0 = floor(P); // Integer part for indexing\n  vec3 Pi1 = Pi0 + vec3(1.0); // Integer part + 1\n  Pi0 = mod(Pi0, 289.0);\n  Pi1 = mod(Pi1, 289.0);\n  vec3 Pf0 = fract(P); // Fractional part for interpolation\n  vec3 Pf1 = Pf0 - vec3(1.0); // Fractional part - 1.0\n  vec4 ix = vec4(Pi0.x, Pi1.x, Pi0.x, Pi1.x);\n  vec4 iy = vec4(Pi0.yy, Pi1.yy);\n  vec4 iz0 = Pi0.zzzz;\n  vec4 iz1 = Pi1.zzzz;\n\n  vec4 ixy = permute(permute(ix) + iy);\n  vec4 ixy0 = permute(ixy + iz0);\n  vec4 ixy1 = permute(ixy + iz1);\n\n  vec4 gx0 = ixy0 / 7.0;\n  vec4 gy0 = fract(floor(gx0) / 7.0) - 0.5;\n  gx0 = fract(gx0);\n  vec4 gz0 = vec4(0.5) - abs(gx0) - abs(gy0);\n  vec4 sz0 = step(gz0, vec4(0.0));\n  gx0 -= sz0 * (step(0.0, gx0) - 0.5);\n  gy0 -= sz0 * (step(0.0, gy0) - 0.5);\n\n  vec4 gx1 = ixy1 / 7.0;\n  vec4 gy1 = fract(floor(gx1) / 7.0) - 0.5;\n  gx1 = fract(gx1);\n  vec4 gz1 = vec4(0.5) - abs(gx1) - abs(gy1);\n  vec4 sz1 = step(gz1, vec4(0.0));\n  gx1 -= sz1 * (step(0.0, gx1) - 0.5);\n  gy1 -= sz1 * (step(0.0, gy1) - 0.5);\n\n  vec3 g000 = vec3(gx0.x,gy0.x,gz0.x);\n  vec3 g100 = vec3(gx0.y,gy0.y,gz0.y);\n  vec3 g010 = vec3(gx0.z,gy0.z,gz0.z);\n  vec3 g110 = vec3(gx0.w,gy0.w,gz0.w);\n  vec3 g001 = vec3(gx1.x,gy1.x,gz1.x);\n  vec3 g101 = vec3(gx1.y,gy1.y,gz1.y);\n  vec3 g011 = vec3(gx1.z,gy1.z,gz1.z);\n  vec3 g111 = vec3(gx1.w,gy1.w,gz1.w);\n\n  vec4 norm0 = taylorInvSqrt(vec4(dot(g000, g000), dot(g010, g010), dot(g100, g100), dot(g110, g110)));\n  g000 *= norm0.x;\n  g010 *= norm0.y;\n  g100 *= norm0.z;\n  g110 *= norm0.w;\n  vec4 norm1 = taylorInvSqrt(vec4(dot(g001, g001), dot(g011, g011), dot(g101, g101), dot(g111, g111)));\n  g001 *= norm1.x;\n  g011 *= norm1.y;\n  g101 *= norm1.z;\n  g111 *= norm1.w;\n\n  float n000 = dot(g000, Pf0);\n  float n100 = dot(g100, vec3(Pf1.x, Pf0.yz));\n  float n010 = dot(g010, vec3(Pf0.x, Pf1.y, Pf0.z));\n  float n110 = dot(g110, vec3(Pf1.xy, Pf0.z));\n  float n001 = dot(g001, vec3(Pf0.xy, Pf1.z));\n  float n101 = dot(g101, vec3(Pf1.x, Pf0.y, Pf1.z));\n  float n011 = dot(g011, vec3(Pf0.x, Pf1.yz));\n  float n111 = dot(g111, Pf1);\n\n  vec3 fade_xyz = fade(Pf0);\n  vec4 n_z = mix(vec4(n000, n100, n010, n110), vec4(n001, n101, n011, n111), fade_xyz.z);\n  vec2 n_yz = mix(n_z.xy, n_z.zw, fade_xyz.y);\n  float n_xyz = mix(n_yz.x, n_yz.y, fade_xyz.x); \n  return 2.2 * n_xyz;\n}\n\nuniform float uTime;\nuniform float ratio;\n\nvarying vec2 vUv;\n\nvoid main() {\n  vec2 ratioUv = vUv;\n  ratioUv.x *= ratio;\n  float shiftRatio = ratio / 2.0 - 0.5;\n  ratioUv.x -= shiftRatio;\n  \n  float time = uTime * 3.0;\n  \n  vec2 rUv = ratioUv * 8.0 + 2.0;\n  vec2 gUv = ratioUv * 8.0 + 0.0;\n  vec2 bUv = ratioUv * 8.0 - 2.0;\n  \n  float r = 1.0 - smoothstep(0.0, 0.08, noise(vec3(rUv, time)));\n  float g = 1.0 - smoothstep(0.0, 0.08, noise(vec3(bUv, time)));\n  float b = 1.0 - smoothstep(0.0, 0.08, noise(vec3(gUv, time)));\n  \n  gl_FragColor = vec4(r, g, b, 1.0);\n}"},d=new o.xC(c),s=new v.C(g,f);d.addPass(s);var y=new i.T(x);d.addPass(y);var l=0;window.addEventListener("resize",(function(){var n=innerWidth,e=innerHeight;c.setSize(n,e),f.aspect=n/e,f.updateProjectionMatrix()})),document.addEventListener("keydown",(function(n){"p"===n.key&&function(){try{var n="image/jpeg",e=c.domElement.toDataURL(n);m(e.replace(n,u),"some-noise.jpg")}catch(n){return void console.log(n)}}()}));var u="image/octet-stream",m=function(n,e){var t=document.createElement("a");"string"==typeof t.download?(document.body.appendChild(t),t.download=e,t.href=n,t.click(),document.body.removeChild(t)):location.replace(uri)};!function n(){d.render(),y.uniforms.uTime.value=l,l+=.003,requestAnimationFrame(n)}()}},t={};function r(n){var o=t[n];if(void 0!==o)return o.exports;var i=t[n]={exports:{}};return e[n](i,i.exports,r),i.exports}r.m=e,n=[],r.O=function(e,t,o,i){if(!t){var v=1/0;for(g=0;g<n.length;g++){t=n[g][0],o=n[g][1],i=n[g][2];for(var a=!0,c=0;c<t.length;c++)(!1&i||v>=i)&&Object.keys(r.O).every((function(n){return r.O[n](t[c])}))?t.splice(c--,1):(a=!1,i<v&&(v=i));a&&(n.splice(g--,1),e=o())}return e}i=i||0;for(var g=n.length;g>0&&n[g-1][2]>i;g--)n[g]=n[g-1];n[g]=[t,o,i]},r.d=function(n,e){for(var t in e)r.o(e,t)&&!r.o(n,t)&&Object.defineProperty(n,t,{enumerable:!0,get:e[t]})},r.o=function(n,e){return Object.prototype.hasOwnProperty.call(n,e)},function(){var n={1621:0};r.O.j=function(e){return 0===n[e]};var e=function(e,t){var o,i,v=t[0],a=t[1],c=t[2],g=0;for(o in a)r.o(a,o)&&(r.m[o]=a[o]);if(c)var f=c(r);for(e&&e(t);g<v.length;g++)i=v[g],r.o(n,i)&&n[i]&&n[i][0](),n[v[g]]=0;return r.O(f)},t=self.webpackChunkthreejs_things=self.webpackChunkthreejs_things||[];t.forEach(e.bind(null,0)),t.push=e.bind(null,t.push.bind(t))}();var o=r.O(void 0,[9407],(function(){return r(4784)}));o=r.O(o)}();